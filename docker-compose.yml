version: "3.7"

services:
    # PHP-FPM - Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: ${APP_NAME}_backend
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker-files/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network

    # NGINX - Service
    webserver:
        image: nginx:1.20.1
        container_name: ${APP_NAME}_webserver
        restart: unless-stopped
        tty: true
        ports:
            - "8100:80"
            - "8443:443"
        volumes:
            - ./:/var/www
            - ./docker-files/nginx/:/etc/nginx/conf.d/
        networks:
            - app-network

    # MariaDB - Service
    db:
        image: mariadb:10.5.6
        container_name: ${APP_NAME}_db
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE:?error} # must set or error
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:?error} # must set or error
        volumes:
            - mariadbdata:/var/lib/mysql
            # - ./data/mysql:/var/lib/mysql # development
            - ./docker-files/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network

    # Db Manager - Service
    adminer:
        image: adminer:4.8.1
        container_name: ${APP_NAME}_adminer
        restart: unless-stopped
        ports:
            - 8002:8080 # 5432
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
        networks:
            - app-network

    # Python Simulator - Service
    simulator:
        build:
            context: .
            dockerfile: simulator/Dockerfile
        container_name: ${APP_NAME}_simulator
        tty: true
        working_dir: /app
        volumes:
            - ./simulator:/app
        networks:
            - app-network

# Volumes
volumes:
    mariadbdata:
        driver: local

# Networks
networks:
    app-network:
        driver: bridge
